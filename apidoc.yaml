openapi: 3.0.0
info:
  title: QuizzWhizz API
  version: 1.0.0
  description: API documentation for the QuizzWhizz application.
servers:
  - url: https://quizwhiz-backend.onrender.com/api/v1
paths:
  /auth/signup:
    post:
      summary: User signup
      description: Creates a new user account and returns a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Divine
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: User successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "403":
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Please provide a valid email, Please provide a password, Your password must be at least 8 characters long

        "409":
          description: Conflict, email already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: A user with that email already exists.
  /auth/login:
    post:
      summary: Log in a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
              required:
                - email
                - password
      responses:
        "200":
          description: User successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: jwt-token-example
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: user-id-example
                          name:
                            type: string
                            example: John Doe
                          email:
                            type: string
                            example: user@example.com
        "401":
          description: Authentication Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Email or password is incorrect.
  /quiz:
    post:
      summary: Create a new quiz
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "General Knowledge Quiz"
                description:
                  type: string
                  example: "A quiz to test your general knowledge"
              required:
                - name
                - description
      responses:
        "200":
          description: Quiz successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "successful"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      creatorId:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "General Knowledge Quiz"
                      description:
                        type: string
                        example: "A quiz to test your general knowledge"
                      status:
                        type: string
                        example: "IDLE"
                      numberOfQuestions:
                        type: number
                        example: 0
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-08-01T00:00:00.000Z"
        "403":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  message:
                    type: string
                    example: "A quiz must have a name, A quiz must have a description"

  /quiz/{id}/questions:
    post:
      summary: Create questions and answers for a quiz
      tags:
        - Quiz
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: "What is the capital of France?"
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      answer:
                        type: string
                        example: "Paris"
                      isCorrect:
                        type: boolean
                        example: true
              required:
                - question
                - answers
      responses:
        "200":
          description: Question and answers successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  question:
                    type: string
                    example: "What is the capital of France?"
                  answers:
                    type: array
                    items:
                      type: object
                      properties:
                        answer:
                          type: string
                          example: "Paris"
                        isCorrect:
                          type: boolean
                          example: true

        "404":
          description: Quiz not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  message:
                    type: string
                    example: "This user does not have any quiz with the id {id}."
        "403":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  message:
                    type: string
                    example: "A question must have a question field, Each question must have an answer field, Every question must have at least 2 answers, A question must have at least one correct answer, Every answer must have an isCorrect field, iscorrect must be a boolean, Every answer object must have an answer field"
